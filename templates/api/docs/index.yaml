---
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Tiki API
  description: This is the default Tiki API allowing programmable access to the Tiki system.
  termsOfService: https://tiki.org/terms-of-service
  contact:
    name: Tiki Developers
    email: tikiwiki-devel@lists.sourceforge.net
    url: https://tiki.org/Contact-Us
  license:
    name: LGPL 2.1
    url: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
externalDocs:
  description: Tiki documentation
  url: https://doc.tiki.org/Documentation
servers:
  - url: {server-url}
security:
  - bearerAuth: []
paths:
  /oauth/public-key:
    $ref: paths-oauth-public_key.yaml
  /oauth/authorize:
    $ref: paths-oauth-authorize.yaml
  /oauth/access_token:
    $ref: paths-oauth-access_token.yaml
  /version:
    $ref: paths-version.yaml
  /categories:
    $ref: paths-categories-index.yaml
  /categories/{categId}:
    $ref: paths-categories-entity.yaml
  /categorize:
    $ref: paths-categories-categorize.yaml
  /uncategorize:
    $ref: paths-categories-uncategorize.yaml
  /comments:
    $ref: paths-comments-index.yaml
  /comments/{threadId}:
    $ref: paths-comments-entity.yaml
  /comments/lock:
    $ref: paths-comments-lock.yaml
  /comments/unlock:
    $ref: paths-comments-unlock.yaml
  /comments/{threadId}/approve:
    $ref: paths-comments-approve.yaml
  /comments/{threadId}/reject:
    $ref: paths-comments-reject.yaml
  /comments/{threadId}/archive:
    $ref: paths-comments-archive.yaml
  /comments/{threadId}/unarchive:
    $ref: paths-comments-unarchive.yaml
  /groups:
    $ref: paths-groups-index.yaml
  /groups/{olgroup}:
    $ref: paths-groups-entity.yaml
  /groups/add_users:
    $ref: paths-groups-add_users.yaml
  /groups/ban_users:
    $ref: paths-groups-ban_users.yaml
  /groups/delete:
    $ref: paths-groups-delete.yaml
  /search/lookup:
    $ref: paths-search-lookup.yaml
  /search/process-queue:
    $ref: paths-search-process_queue.yaml
  /search/rebuild:
    $ref: paths-search-rebuild.yaml
  /trackers:
    $ref: paths-trackers-index.yaml
  /trackers/{trackerId}:
    $ref: paths-trackers-entity.yaml
  /trackers/{trackerId}/clear:
    $ref: paths-trackers-clear.yaml
  /trackers/{trackerId}/duplicate:
    $ref: paths-trackers-duplicate.yaml
  /trackers/{trackerId}/dump:
    $ref: paths-trackers-dump.yaml
  /trackers/{trackerId}/export:
    $ref: paths-trackers-export.yaml
  /trackers/{trackerId}/fields:
    $ref: paths-trackers-fields-index.yaml
  /trackers/{trackerId}/fields/{fieldId}:
    $ref: paths-trackers-fields-entity.yaml
  /trackers/{trackerId}/fields/export:
    $ref: paths-trackers-fields-export.yaml
  /trackers/{trackerId}/items:
    $ref: paths-trackers-items-index.yaml
  /trackers/{trackerId}/items/{itemId}:
    $ref: paths-trackers-items-entity.yaml
  /trackers/{trackerId}/items/{itemId}/clone:
    $ref: paths-trackers-items-clone.yaml
  /trackers/{trackerId}/items/{itemId}/status:
    $ref: paths-trackers-items-status.yaml
  /translations/{type}/{source}:
    $ref: paths-translations-index.yaml
  /translations/{type}/{source}/attach:
    $ref: paths-translations-attach.yaml
  /translations/{type}/{source}/detach:
    $ref: paths-translations-detach.yaml
  /translate:
    $ref: paths-translate.yaml
  /users:
    $ref: paths-users-index.yaml
  /users/{username}:
    $ref: paths-users-entity.yaml
  /users/delete:
    $ref: paths-users-delete.yaml
  /users/groups:
    $ref: paths-users-groups.yaml
  /users/email-wikipage:
    $ref: paths-users-email_wikipage.yaml
  /users/send-message:
    $ref: paths-users-send_message.yaml
  /message-count:
    $ref: paths-users-message_count.yaml
  /wiki:
    $ref: paths-wiki-index.yaml
  /wiki/page/{page}:
    $ref: paths-wiki-entity.yaml
  /wiki/page/{page}/delete:
    $ref: paths-wiki-version_delete.yaml
  /wiki/delete:
    $ref: paths-wiki-delete.yaml
  /wiki/title:
    $ref: paths-wiki-title.yaml
  /wiki/lock:
    $ref: paths-wiki-lock.yaml
  /wiki/unlock:
    $ref: paths-wiki-unlock.yaml
  /wiki/zip:
    $ref: paths-wiki-zip.yaml
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Obtain bearer token keys either in your Tiki admin Security page by manually creating them or setting up Tiki OAuth 2.0 server that generates JWT tokens to authenticated clients.
